#!/bin/bash

#
# Only repo maintainers should need to use this
# Copies all necessary Qt frameworks into the current dir, and updates
# the LD paths
#

# /Cellar assumes we've installed Qt via homebrew
QT_PATH=/usr/local/Cellar/qt/5.10.1
QT_LIB=(QtCore QtGui QtWidgets QtMultimedia QtTest QtQuick QtQml QtNetwork)

echo Removing existing copy
rm -rf include lib
mkdir include lib

echo Importing copy from ${QT_PATH}

for LIB in ${QT_LIB[*]}
do
	cp -R ${QT_PATH}/lib/${LIB}.framework lib
done

# Avoid symbolic links by moving Version files around (npm doesn't like symlinks)
# find . -type l | xargs rm -f

# Replace header symlinks with hardcopies
for LIB in ${QT_LIB[*]}
do
mv -f lib/${LIB}.framework/Versions/5/Headers include/${LIB}
done

# Replace lib symlinks with hardcopies
# for LIB in ${QT_LIB[*]}
# do
# mv -f lib/${LIB}.framework/Versions/5/* lib/${LIB}.framework
# done

chmod -R u+rw *

# Update ids
# for LIB in ${QT_LIB[*]}
# do
# install_name_tool -id "@executable_path/../deps/qt-5.10.1/darwin/x64/lib/${LIB}.framework/Versions/5/${LIB}" lib/${LIB}.framework/Versions/5/${LIB}
# done

# Update internal refs (from old paths to new)
# for LIB in ${QT_LIB[*]}
# do
# install_name_tool -change ${QT_PATH}/lib/${LIB}.framework/Versions/5/${LIB} @executable_path/../deps/qt-5.10.1/darwin/x64/lib/${LIB}.framework/Versions/5/${LIB} lib/${LIB}.framework/Versions/5/${LIB}
# done

# Fix libpng (we need libpng as per: https://github.com/arturadib/node-qt/issues/5)
# install_name_tool -change /usr/X11/lib/libpng15.15.dylib libpng15.15.dylib lib/QtGui.framework/QtGui

# Break unncessary references to old path to avoid Qt's weird fallback
# (find command only matches binary files like QtCore, not QtCore.prl)
# echo "Break unncessary references to old path to avoid Qt's weird fallback"
# find lib -type f -name 'Qt*' ! -name '*.*' | xargs sed -i .bak -E 's/Cellar/______/g'
#find lib -type f -name 'Qt*' ! -name '*.*' -exec bash -c 'hexdump -ve "1/1 \"%.2X\"" {} | sed "s/43656C6C6172/5F5F5F5F5F5F/g" | xxd -r -p > {}' \;
#find lib -name '*.bak' | xargs rm -f
